##############################################
# Tutorial map 3: Movement and exploration   #
##############################################

{{
require("dlua/tutorial.lua")

tutorial_msg3 = {}

function tutorial_msg3.start ()
    tutorial_intro("In this lesson you're going to learn about items and how to use them.")
    crawl.tutorial_hint("HINT_MULTI_PICKUP")
    crawl.tutorial_hint("HINT_CHOOSE_STAT")
    crawl.tutorial_hint("HINT_YOU_CURSED")
    crawl.tutorial_hint("HINT_REMOVED_CURSE")
end

function tutorial_msg3.armour ()
    local text = "Pick up these boots with <w>[</w>"
                 .. tutorial_get_cmd("CMD_PICKUP") .. "<w>]</w> or <white>[g]</white> "
                 .. "and then wear them with <w>[</w>"
                 .. tutorial_get_cmd("CMD_WEAR_ARMOUR") .. "<w>]</w>."

    if crawl.is_tiles() and not crawl.is_webtiles() then
        text = text .. " Or simply <white>[mouseclick]</white> on them."
    end

    return tutorial_message(text)
end

function tutorial_msg3.autopickup ()
    local text = "Some types of items "

    if crawl.is_tiles() then
        text = text .. " with green frame"
    end

    text = text .. " are <w>automatically picked up</w>. "
                                .. "\nThis scroll of identify is familiar to your character "
                                .. "so you do not need to find out what it does. "

    return tutorial_message(text)
end

function tutorial_msg3.scroll_noautopickup ()
    local text = "Autopickup does not work if there's a monster around.\n"
                 .. "You can either pick up this scroll now with <w>[</w>"
                 .. tutorial_get_cmd("CMD_PICKUP") .. "<w>]</w> or <white>[g]</white>"

    if crawl.is_tiles() and not crawl.is_webtiles() then
        text = text .. " or by <white>[mouseclick]</white>,"
    end

    text = text .. "\nor you can fight the nearby enemy and pick it up afterwards.\n"
                .. "Either way, you should identify it by using your scroll of identify with <w>[</w>"
                .. tutorial_get_cmd("CMD_READ") .. "<w>]</w>"

    if crawl.is_tiles() and not crawl.is_webtiles() then
        text = text .. " or by <white>[mouseclick]</white>"
    end

    text = text .. "."

    return tutorial_message(text, false)
end

function tutorial_msg3.ego_weapon ()
    return tutorial_message("An item described as <white>runed</white> "
                            .. "or <white>glowing</white> will always be "
                            .. "enchanted, have special properties, or both.\n"
                            .. "You need to <w>[w]</w>ield this scimitar to find out what "
                            .. "those are.")
end

function tutorial_msg3.inventory ()
    local text = "You can inspect your new weapon with <w>[</w>"
                 .. tutorial_get_cmd("CMD_DISPLAY_INVENTORY") .. "<w>]</w>"
    if crawl.is_tiles() and not crawl.is_webtiles() then
        text = text .. ", or by <white>[mouseover]</white> / <white>[rightclick]</white> "
                    .. "in the inventory panel"
    end

    text = text .. ".\nNotice that all the item commands also work from the item description screens."

    return tutorial_message(text)
end

function tutorial_msg3.battle ()
    return tutorial_message("Once you've successfully managed to poison a monster, "
                            .. "it is sometimes best to retreat and let the poison "
                            .. "do the work. Also retreat to heal, if necessary.")
end

function tutorial_msg3.downstairs ()
    return tutorial_message("Well fought! If necessary, rest up with "
                            .. tutorial_get_cmd("CMD_REST")
                            .. ", then continue downwards with "
                            ..  tutorial_get_cmd("CMD_GO_DOWNSTAIRS")
                            .. ".")
end

function tutorial_msg3.command_help ()
    local text = "If the many commands are too confusing, you can also look them "
                 .. "up in the command help <w>[</w>"
                 .. tutorial_get_cmd("CMD_DISPLAY_COMMANDS")
                 .. "<w>]</w>.\n "
    if crawl.is_tiles() and not crawl.is_webtiles() then
        text = text .. "Also, a number of commands are available in the clickable "
                    .. "<w>command panel</w> to the right of the screen.\nAnd, "
                    .. "as usual, you "
    else
        text = text .. "Also, remember: You "
    end
    text = text .. "can reread old messages with "
                .. tutorial_get_cmd("CMD_REPLAY_MESSAGES") .. "."

    crawl.mesclr(true)
    crawl.mpr(text, "tutorial")
end

function tutorial_msg3.potion ()
    local text = "You already know this potion, drink it to remove the poison by <w>[</w>"
                 .. tutorial_get_cmd("CMD_QUAFF") .. "<w>]</w>"
    if crawl.is_tiles() and not crawl.is_webtiles() then
        text = text .. " or <white>[mouseclick]</white>"
    end
    text = text .. "."

    return tutorial_message(text)
end

function tutorial_msg3.optional_battle ()
    return tutorial_message("Warning, this way leads to a <lightred>hard battle</lightred>.\n"
                                                        .. "You may choose to test what you've learned so far\n"
                                                        .. "or you may choose to ignore this room and continue into the forest.")
end

function tutorial_msg3.quantified_drop ()
    local text = "Carrying too much weight will cause you to become <lightred>burdened</lightred>!\n"
                                 .. "Being <lightred>burdened</lightred> will slow you down and hinder your combat. "
                 .. "You can drop things you do not need with <w>[</w>"
                 .. tutorial_get_cmd("CMD_DROP") .. "<w>]</w>,\n"
                                 .. "or you can only drop the amount you want e.g. 20, by typing <w>[</w>"
                 .. tutorial_get_cmd("CMD_DROP") .. "<white>, 20]</white>, selecting "
                 .. "the meat rations, and confirming with <white>[Enter]</white>."

        if crawl.is_tiles() and not crawl.is_webtiles() then
                text = text .. "\nOr by <white>[Shift-mouseclicking]</white> on meat rations"
        end

    return tutorial_message(text)
end

function tutorial_msg3.jewellery ()
    local text = "Remember, you can put on jewellery with <w>[</w>"
                 .. tutorial_get_cmd("CMD_WEAR_JEWELLERY") .. "<w>]</w>"
    if crawl.is_tiles() and not crawl.is_webtiles() then
        text = text .. " or by <white>[mouseclick]</white>"
    end
    text = text .. "."

    return tutorial_message(text)
end

function tutorial_msg3.artefact_armour ()
    local text = "Items with <white>unusual name</white> are artefacts\n"
                                 .. "Artefacts can have a number of special properties.\n"
                 .. "Equip this cloak with <w>[</w>"
                 .. tutorial_get_cmd("CMD_WEAR_ARMOUR") .. "<w>]</w>"
    if crawl.is_tiles() and not crawl.is_webtiles() then
        text = text .. " or by <white>[mouseclick]</white>"
    end
    text = text .. " to find out what those are, or waste identifying scroll for it."

    return tutorial_message(text)
end

function tutorial_msg3.gold ()
    return tutorial_message("Gold has no weight, cannot be dropped, and can be "
                            .. "spent in shops.")
end

function tutorial_msg3.enter_shop ()
    local text = "To enter this shop, press <w>[</w>"
                 .. tutorial_get_cmd("CMD_GO_UPSTAIRS") .. "<w>]</w>"

    if crawl.is_tiles() and not crawl.is_webtiles() then
        text = text .. " or <white>[Shift-mouseclick]</white>"
    end
    text = text .. ". To buy items, select them with hotkey, hit <w>[Enter]</w> and confirm with <w>[y]es</w>"
                .. "\nYou can switch to description mode with <w>!</w> "

    return tutorial_message(text, false)
end

function tutorial_msg3.wand_fire ()
    local text = "You can evoke a wand with <w>[</w>"
                 .. tutorial_get_cmd("CMD_EVOKE").. "<w>]</w>"
    if crawl.is_tiles() and not crawl.is_webtiles() then
        text = text .. " or by <white>[mouseclick]</white>"
    end
    text = text .. "."

    return tutorial_message(text)
end

function tutorial_msg3.wand_digging ()
    local text = "When zapping with wand, you can "
                 .. "hold <w>[Shift]</w> together with the direction keys to shoot in straight line.\n"
                 .. "With wand of digging you may destroy some walls, like the ones on that collabsed corridor. "
                 .. "Use <w>[</w>" .. tutorial_get_cmd("CMD_LOOK_AROUND") .. "<w>, v]</w> "
    if crawl.is_tiles() and not crawl.is_webtiles() then
        text = text .. "or <white>[mouseover]</white> / <white>[rightclick]</white> "
    end
    text = text .. "to check the wall types.\n??"
                .. "(You can look up the direction keys in the command help help "
                .. "with <w>[?]</w>.)"

    return tutorial_message(text)
end

function tutorial_msg3.amulet ()
    local text = "Amulets are type of jewellery and can be put on with <w>[</w>"
                 .. tutorial_get_cmd("CMD_WEAR_JEWELLERY").. "<w>]</w>"
    if crawl.is_tiles() and not crawl.is_webtiles() then
        text = text .. " or by <white>[mouseclick]</white>"
    end
    text = text .. ".\nSome types of jewellery, when equipped, don't identify "
                .. "automatically. For that, you'll need a scroll of identify."

    return tutorial_message(text)
end

function tutorial_msg3.scroll_id ()
    return tutorial_message("Yet another unidentified scroll!\n"
                                                        .. "You normally find out the properties of scrolls by using them and figuring out what they do.\n"
                                                        .. "Alternatively you can use one of your identifying scrolls as you happen to have them.")
end

function tutorial_msg3.go_shopping ()
    local text = "To prepare, you may want to go back to the shop to gear up. "
                 .. "The quickest way to do so is by searching for it.\n"
                 .. "Type <w>[</w>"
                 .. tutorial_get_cmd("CMD_SEARCH_STASHES") .. "<w>]</w>"

    if crawl.is_tiles() and not crawl.is_webtiles() then
        text = text .. " or <w>[mouseclick]</w> in the <w>command panel</w>"
    end

    text = text .. ", and then enter \"<w>shop</w>\". Select the result to start "
                .. "traveling.\n"

    if crawl.is_tiles() and not crawl.is_webtiles() then
        text = text .. "Or travel by <white>[mouseclicking]</white> on the <white>minimap</white>"
    end
    text = text .. "."

    return tutorial_message(text)
end

function tutorial_msg3.item_use ()
    return tutorial_message("There are some nasty monsters behind that door. "
                            .. "Remember to use the items you hopefully just bought!")
end

function tutorial_msg3.travel_reminder ()
    return tutorial_message("Remember that you can automatically explore the map using <w>[</w>"
                            .. tutorial_get_cmd("CMD_EXPLORE") .. "<w>]</w>"
                                                        .. ".")
end

function tutorial_msg3.tutorial_end ()
    return tutorial_message("Well done! To exit the tutorial, simply enter the door ")
end

function tutorial_msg3.exit ()
    -- A single screen recapping all commands.

    local text = "<yellow>Item commands</yellow>\n"
                 .. "  " .. tutorial_get_cmd("CMD_PICKUP") .. "  pick up an item\n"
                 .. "  " .. tutorial_get_cmd("CMD_DROP") .. "  drop an item\n"
                 .. "  " .. tutorial_get_cmd("CMD_WIELD_WEAPON") .. "  wield a weapon\n"
                 .. "  " .. tutorial_get_cmd("CMD_EAT") .. "  eat something\n"
                 .. "  " .. tutorial_get_cmd("CMD_READ") .. "  read a scroll\n"
                 .. "  " .. tutorial_get_cmd("CMD_QUAFF") .. "  quaff a potion\n"
                 .. "  " .. tutorial_get_cmd("CMD_WEAR_ARMOUR") .. "  wear a piece of armour\n"
                 .. "  " .. tutorial_get_cmd("CMD_WEAR_JEWELLERY") .. "  put on jewellery\n"
                 .. "  " .. tutorial_get_cmd("CMD_REMOVE_JEWELLERY") .. "  remove jewellery\n"
                 .. "  " .. tutorial_get_cmd("CMD_EVOKE") .. "  evoke a wand\n"

    text = text .. "\nUsage commands are also available from the inventory menu ("
                .. tutorial_get_cmd("CMD_DISPLAY_INVENTORY") .. "), as are the item descriptions."

    if crawl.is_tiles() and not crawl.is_webtiles() then
        text = text .. "\nAnd of course, <white>mouseclicks</white> also work.\n"
    end

    text = text .. "\n<yellow>Other</yellow>\n"
                .. "  " .. tutorial_get_cmd("CMD_DISPLAY_COMMANDS") .. "<w>?</w>  access the command help\n"
                .. "  " .. tutorial_get_cmd("CMD_USE_ABILITY") .. "  use an ability\n"
                .. "  " .. tutorial_get_cmd("CMD_RESISTS_SCREEN") .. "  display character overview\n"
                .. "  " .. tutorial_get_cmd("CMD_ADJUST_INVENTORY") .. "  reassign inventory slots\n"
                .. "  " .. tutorial_get_cmd("CMD_SEARCH_STASHES") .. "  search for items/features previously seen\n"

    if crawl.is_tiles() and not crawl.is_webtiles() then
        text = text .. "\nSeveral of these commands can also be executed by clicking in the <w>command panel</w>.\n"
    end

    text = text .. "                                 <cyan>Press <white>any key</white> to clear this screen...</cyan>\n"

    return crawl.endgame(text)
end

function tutorial_msg3.win()
    crawl.mark_game_won()
    return tutorial_msg3.exit()
end
}}

NAME:    tutorial_lesson3
TAGS:    no_rotate no_monster_gen no_item_gen no_hmirror no_vmirror no_trap_gen no_pool_fixup tutorial
DESC:    "Lesson 3: Items and Inventory"
ORIENT:  encompass
COLOUR:  ABCDEdefgi = lightblue
COLOUR:  ' = brown
FTILE:   ABCDEdefgi = tutorial_pad
FTILE:   'h[ = floor_swamp, t = floor_grass
KFEAT:   S = general shop use_all ; \
         potion of curing | potion of heal wounds |  potion of heal wounds q:2 | potion of might | \
         wand of paralysis | ring mail | buckler ego:none | ring of slaying | scroll of enchant weapon II
KFEAT:   ABCDE = '

ITEM:    pair of boots race:no_race mundane not_cursed
ITEM:    scroll of identify q:4 ident:all
ITEM:    scroll of enchant armour q:3
ITEM:    meat ration q:50
ITEM:    scroll of recharging q:3
ITEM:    ring of levitation
ITEM:    gold q:60
MONS:    goblin ; nothing
MONS:    gnoll ; flail ego:none | spiked flail ego:none | halberd ego:none . \
         leather armour ego:fire_resistance | ring mail ego:fire_resistance
MONS:    orc ; scimitar ego:none | battleaxe ego:none . \
         ring mail ego:fire_resistance | chain mail ego:fire_resistance

MARKER:  d = lua:tutorial_msg3.armour()
MARKER:  e = lua:tutorial_msg3.autopickup()
MARKER:  f = lua:tutorial_msg3.scroll_noautopickup()
MARKER:  g = lua:tutorial_msg3.quantified_drop()
MARKER:  S = lua:tutorial_msg3.enter_shop()
MARKER:  A = lua:tutorial_msg3.go_shopping()
MARKER:  B = lua:tutorial_msg3.scroll_id()
MARKER:  C = lua:tutorial_msg3.item_use()
MARKER:  D = lua:tutorial_msg3.optional_battle()
MARKER:  E = lua:tutorial_msg3.travel_reminder()
MARKER:  i = lua:tutorial_msg3.jewellery()

MARKER:  } = lua:tutorial_msg3.downstairs()
MARKER:  { = lua:one_way_stair { dst  = "tutorial_lesson3", \
                                 onclimb = "tutorial_msg3.exit" }
MARKER:  [ = lua:tutorial_msg3.tutorial_end()
MARKER:  [ = lua:one_way_stair { dst  = "tutorial_lesson3", \
                                 desc = "exit from the tutorial", \
                                 onclimb = "tutorial_msg3.win" }
epilogue{{
  tutorial_msg3.start()
}}
MAP
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxttttttttttttttttttttttttt
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxttttttttttttttttttttttttt
xxxxxxxxxxxx{xxxxxxxxxxxxxxxxttttttttttttttttttttttttt
xxxxxxxxxxx...xxxxxxxxxxxxxxxttttttttttttttttttttttttt
xxxxxxxxxxx...xxxxxxxxxxxxxxttttttt'''tttttttttttttttt
x..+..e...d...xxxxxxxxxxxxxttttttt'')'tttttttttttttttt
x..xxxxxxxxxxxxxxxxxxxxxxxttttttttt''''ttttttttttttttt
xfxxxxxxxxxxxxxxxxxxxxxxxtttttttttttBttttttttttttttttt
x.xxxxxxxxXXXXXXXX..jjxxxttttttttttt''''tttttttttttttt
x..xxxxxxxXX..31.+..jjxxxttttttttttt''h'tttttttttttttt
x1.xxxxxxxXX.2.1.+..xxxxxttttttttttttt''tttwwwwttttttt
x..xxxxxxxXX.3..XXxAxxttttttttttttttttWWWWWwwtwwwttttt
xx.xxxxxxxXX2.2.XXx''''tttttttttttttwwwwt'S'ttwwwttttt
xxgxxxxxxxXX.3..XXxxxx'ttttttt''''wwwwwttt''ttttwttttt
x..xxx.]xxXXXXXXXXxx''D''''''''wwwwwtttttttE'ttttttttt
x....+..xXXXxxxxxxx'''tttttt''iwwwwwwtttttt'''tttttttt
xxxxxxxxxxxxxxxxxx''''tttttttwwwww''''ttttttt'tttttttt
XXxtttttttttxxxwwwWW'tttttwwwwwwwtt'['ttttttt'tttttttt
wttttttttttwwxwwwwwWWWwwwwwwwwwwttt'''ttttttt'tttttttt
wwwttttwwwwwwwwwttwwWWWwwwwtwwwwttttttttttttt'tttttttt
wwwwwwwwwwwwwwtttttwwWWWtttttwtttttttttttttt''tttttttt
twwwwwwwwwwwtttttttt'''''tttt''''''''''''''''ttttttttt
tttttwwwwwwwwtttttttt''''tttt''ttttttttttttttttttttttt
ttttttttttwwttttttttt'''''''''tttttttttttttttttttttttt
tttttttttttttttttttttt'''ttttttttttttttttttttttttttttt
tttttttttttttttttttttttttttttttttttttttttttttttttttttt
tttttttttttttttttttttttttttttttttttttttttttttttttttttt
tttttttttttttttttttttttttttttttttttttttttttttttttttttt
ENDMAP

##########################################################
# Level 2: Character status
##########################################################
NAME:    tutorial_lesson3_level2
TAGS:    no_rotate no_monster_gen no_item_gen no_hmirror no_vmirror no_trap_gen no_pool_fixup tutorial_lesson3
PLACE:   D:2
ORIENT:  encompass
KFEAT:   ^ = needle trap
KFEAT:   AB = .
COLOUR:  ABdefghij = lightblue
FTILE:   ABdefghij = tutorial_pad
RTILE:   c = wall_vines

ITEM:    potion of curing q:2 ident:all
ITEM:    scimitar race:none ego:venom not_cursed
ITEM:    cloak unrand:ratskin_cloak
ITEM:    wand of flame charges:9 ident:all
ITEM:    wand of digging charges:15 ident:all
ITEM:    amulet of inaccuracy mundane not_cursed
ITEM:    gold q:60
MONS:    rat hp:4, giant cockroach hp:5, hobgoblin ; nothing
MONS:    gnoll ; spear mundane
MONS:    orc ; nothing
MARKER:  ^ = lua:props_marker {poisoned_needle_trap="true", force_hit="true"}
MARKER:  d = lua:tutorial_msg3.potion()
MARKER:  e = lua:tutorial_msg3.ego_weapon()
MARKER:  f = lua:tutorial_msg3.artefact_armour()
MARKER:  g = lua:tutorial_msg3.wand_fire()
MARKER:  h = lua:tutorial_msg3.wand_digging()
MARKER:  i = lua:tutorial_msg3.amulet()
MARKER:  j = lua:tutorial_msg3.gold()
MARKER:  A = lua:tutorial_msg3.inventory()
MARKER:  B = lua:tutorial_msg3.battle()
epilogue{{
  tutorial_msg3.command_help()
}}
MAP
cXXXXXccccccccccccccccccccc
cX[..Xccccccccccccccccccccc
cX...Xccccccccccccccccccccc
XX...Xccccccccccccccccccccc
XXX.XXccccccccccccccccccccc
XXX^XXccccccccccccccccccccc
ccc.ccccccccccccccccccccccc
cccdccccccccccccccccccccccc
ccc.ccccccccccccccccccccccc
ccc..cccccccccccccccccccccc
ccc......A....ccccccccccccc
ccce.ccccccccBcc....ccccccc
cccccc.cccccc+cc(...ccccccc
ccccc...cccc2.1c....ccccccc
cccc..g.+...352ccjicccccccc
ccccc...cccc.3.cc..cccccccc
cccccc+cccccccccc..cccccccc
cccccc.ccccccccccXxcccccccc
cccccc.ccccccccccXxcccccccc
cccccc.cccccccccc..cccccccc
ccccc...ccccccccc.hcccccccc
ccccc..............cccccccc
ccccc.f...........ccccccccc
ccccc.4.ccccccccccccccccccc
ccccccccccccccccccccccccccc
ccccccccccccccccccccccccccc
ENDMAP
