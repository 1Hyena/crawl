# Make file for Dungeon Crawl (Win32, MinGW)

# this file contains a list of the libraries.
# it will make a variable called OBJECTS that contains all the libraries
include makefile.obj

ifeq ($(DEBUG_CRAWL),)
OPATH := rel
else
OPATH := dbg
endif

# need .exe so make will find the right file
APPNAME = $(OPATH)\crawl.exe
CXX = g++
DELETE = del
COPY = copy
OS_TYPE = WIN32CONSOLE
CFLAGS = -Wall -Wwrite-strings \
			-Wshadow \
			-Werror \
			-fsigned-char \
			-fstrict-aliasing \
			-pedantic \
			-D$(OS_TYPE) $(EXTRA_FLAGS) \
			-DWINMM_PLAY_SOUNDS

OBJECTS := $(OBJECTS) libw32c.o
OBJECTS := $(foreach file,$(OBJECTS),$(OPATH)/$(file))

LDFLAGS = 
INSTALLDIR = .
#LIB = -lcurso -lpano
LIB = -lwinmm -static

UTIL = util/

# If you don't have flex or bison, set DOYACC to N or empty.
DOYACC := n

LEX  := flex
YACC := bison -y

YTABC  := levcomp.tab.c
YTABH  := levcomp.tab.h


ifeq ($(LEX),)
DOYACC :=
endif

ifeq ($(YACC),)
DOYACC :=
endif

GAME_DEPENDS := prepare compile-levels $(OBJECTS)

##########################################################################

all:            $(APPNAME)

prepare:
		if not exist $(OPATH) mkdir $(OPATH)

##########################################################################
# The level compiler
#
compile-levels: $(UTIL)levcomp.exe mapdefs.ixx

mapdefs.ixx:	dat/vaults.des dat/splev.des $(UTIL)levcomp.exe
		$(subst /,\, $(UTIL)levcomp.exe $@ < dat/vaults.des)
		$(subst /,\, $(UTIL)levcomp.exe -a $@ < dat/splev.des)

$(UTIL)levcomp.exe: $(UTIL)levcomp.tab.o $(UTIL)levcomp.lex.o $(OPATH)/mapdef.o $(UTIL)levcomp.o
		$(CXX) -o $@ $^

ifeq ($(DOYACC),y)

# [ds] A plague on the broken copy command on Windoze.
prebuildyacc:	mapdefs.ixx $(UTIL)levcomp.lex.cc $(UTIL)levcomp.tab.cc	$(UTIL)levcomp.tab.h
		$(subst /,\,for %%f in ($^) do $(COPY) %%f prebuilt)

$(UTIL)levcomp.tab.cc: $(UTIL)levcomp.ypp
		$(subst /,\, cd $(UTIL)) && $(YACC) -d -b levcomp levcomp.ypp
		$(subst /,\, cd $(UTIL)) && move $(YTABC) levcomp.tab.cc

$(UTIL)levcomp_lex.cc: $(UTIL)levcomp.lpp
		$(subst /,\, cd $(UTIL) && $(LEX) -olevcomp.lex.cc levcomp.lpp)

else

$(UTIL)levcomp.tab.cc: prebuilt/levcomp.tab.cc
		$(subst /,\,$(COPY) prebuilt/*.h $(UTIL))
		$(subst /,\,$(COPY) $< $@)

$(UTIL)levcomp.lex.cc: prebuilt/levcomp.lex.cc
		$(subst /,\,$(COPY) $< $@)

endif

##########################################################################

install:        $(APPNAME)
		$(COPY) $(APPNAME) ${INSTALLDIR}

clean:
		$(DELETE) $(OPATH)\*.o
		$(subst /,\,$(DELETE) $(UTIL)*.o)
		$(subst /,\,$(DELETE) $(UTIL)*.exe)
		$(subst /,\,$(DELETE) $(UTIL)*.lex.cc)
		$(subst /,\,$(DELETE) $(UTIL)*.tab.cc)
		$(subst /,\,$(DELETE) $(UTIL)*.tab.h)
		$(subst /,\,$(DELETE) $(UTIL)*.tab.c)
		$(subst /,\,$(DELETE) *.ixx)

distclean:
		$(DELETE) $(OPATH)\*.o 
		$(DELETE) *.o
		$(DELETE) bones.*
		$(DELETE) $(OPATH)\bones.*
		$(DELETE) morgue.txt
		$(DELETE) $(OPATH)\morgue.txt
		$(DELETE) scores 
		$(DELETE) $(OPATH)\scores 
		$(DELETE) crawl.exe
		$(DELETE) $(subst /,\,$(APPNAME))
		$(DELETE) *.sav
		$(DELETE) $(OPATH)\*.sav
		$(DELETE) core
		$(DELETE) $(OPATH)\core
		$(DELETE) *.0*
		$(DELETE) $(OPATH)\*.0*
		$(DELETE) *.lab
		$(DELETE) $(OPATH)\*.lab

$(APPNAME):	$(GAME_DEPENDS)
		${CXX} ${LDFLAGS} $(INCLUDES) $(CFLAGS) $(OBJECTS) -o $(APPNAME) $(LIB)
		strip $(APPNAME)

debug:		$(GAME_DEPENDS)
		${CXX} ${LDFLAGS} $(INCLUDES) $(CFLAGS) $(OBJECTS) -o $(APPNAME) $(LIB)

profile:	$(GAME_DEPENDS)
		${CXX} -g -p ${LDFLAGS} $(INCLUDES) $(CFLAGS) $(OBJECTS) -o $(APPNAME) $(LIB)

$(OPATH)/maps.o: mapdefs.ixx

$(OPATH)/%.o: %.cc
		${CXX} ${CFLAGS} ${INCLUDES} -o $@ -c $< 

$(UTIL)%.o: $(UTIL)%.cc
		$(CXX) -I$(UTIL) -I. -o $@ -c $<
